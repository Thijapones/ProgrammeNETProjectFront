{"ast":null,"code":"var _jsxFileName = \"C:\\\\github\\\\repository\\\\paper-kit-react-master\\\\src\\\\components\\\\MTGTables\\\\MTGShelfCardsTable.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { MDBContainer } from \"mdbreact\";\nimport \"assets/css/scrollbar.css\";\nimport MTGCard from \"classes/MTGCard.js\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, CardTitle, Table, Row, Col } from \"reactstrap\";\n\nclass Tables extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.GetAll = () => {\n      axios.get('http://localhost:5000/api/MTGCard').then(response => {\n        // handle success \n        this.setState({\n          MTGCard: response.data\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {// always executed\n      });\n    };\n\n    this.GetByName = () => {\n      axios.get(\"http://localhost:5000/api/MTGCard/Name/\".concat(this.state.searchinput)).then(response => {\n        // handle success \n        this.setState({\n          MTGCard: response.data\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {// always executed\n      });\n    };\n\n    this.GetBySet = () => {\n      axios.get(\"http://localhost:5000/api/MTGCard/Set/\".concat(this.state.searchinput)).then(response => {\n        // handle success \n        this.setState({\n          MTGCard: response.data\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {// always executed\n      });\n    };\n\n    this.GetBySetCode = () => {\n      axios.get(\"http://localhost:5000/api/MTGCard/SetCode/\".concat(this.state.searchinput)).then(response => {\n        // handle success \n        this.setState({\n          MTGCard: response.data\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {// always executed\n      });\n    };\n\n    this.GetByMTGId = () => {\n      axios.get(\"http://localhost:5000/api/MTGCard/MTGId/\".concat(this.state.searchinput)).then(response => {\n        // handle success \n        this.setState({\n          MTGCard: response.data\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {// always executed\n      });\n    };\n\n    this.AddToShelf = id => {\n      axios.get(\"http://localhost:5000/api/MTGCard/MTGId/\").then(response => {\n        // handle success \n        this.setState({\n          MTGCard: response.data\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {// always executed\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        qtyinput: e.target.value\n      });\n    };\n\n    this.rendertable = () => {\n      return this.state.MTGCard.map(item => {\n        return React.createElement(\"tr\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, item.mtgid), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, item.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, item.set), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, item.setcode), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: item.id,\n          type: \"text\",\n          value: this.state.qtyinput,\n          onChange: this.onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"btn-round\",\n          color: \"info\",\n          outline: true,\n          size: \"sm\",\n          onClick: this.AddToShelf(item.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"nc-icon nc-send\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }), \" Add to Shelf\")));\n      });\n    };\n\n    this.state = {\n      MTGCard: [],\n      mid: MTGCard.id,\n      mname: MTGCard.name,\n      mset: MTGCard.set,\n      msetcode: MTGCard.setcode,\n      mmtgid: MTGCard.mtgid,\n      searchinput: '',\n      qtyinput: '0'\n    };\n  }\n\n  componentDidMount() {\n    // Make a request for a user with a given ID\n    this.GetAll();\n  }\n\n  render() {\n    let pageHeader = React.createRef();\n    const scrollContainerStyle = {\n      width: \"1000px\",\n      maxHeight: \"450px\"\n    };\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        backgroundImage: \"url(\" + require(\"assets/img/MTG/https___magic.wizards.com_sites_mtg_files_images_wallpaper_Ferocious_Pup_M20_1920x1080.jpg\") + \")\"\n      },\n      className: \"page-header\",\n      \"data-parallax\": true,\n      ref: pageHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"scrollbar scrollbar-default\",\n      style: scrollContainerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Row, {\n      md: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      tag: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Choose Your Weapons\"), React.createElement(\"input\", {\n      placeholder: \"Search...\",\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.searchinput,\n      onChange: event => this.setState({\n        searchinput: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"btn-round\",\n      color: \"success\",\n      outline: true,\n      size: \"sm\",\n      onClick: this.GetByName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), \" Find By Name\"), React.createElement(Button, {\n      className: \"btn-round\",\n      color: \"success\",\n      outline: true,\n      size: \"sm\",\n      onClick: this.GetBySet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), \" Find By Set\"), React.createElement(Button, {\n      className: \"btn-round\",\n      color: \"success\",\n      outline: true,\n      size: \"sm\",\n      onClick: this.GetBySetCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), \" Find By Set Code\"), React.createElement(Button, {\n      className: \"btn-round\",\n      color: \"success\",\n      outline: true,\n      size: \"sm\",\n      onClick: this.GetByMTGId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), \" Find By MTG Card ID\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Table, {\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"MTGCardID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Card Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Set\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Set Code\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Shelf\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, this.rendertable())), React.createElement(Button, {\n      href: \"/mtgshelf\",\n      className: \"btn-round\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Return To Previous Menu\")))))))));\n  }\n\n}\n\nexport default Tables;","map":{"version":3,"sources":["C:\\github\\repository\\paper-kit-react-master\\src\\components\\MTGTables\\MTGShelfCardsTable.js"],"names":["React","axios","MDBContainer","MTGCard","Button","Card","CardHeader","CardBody","CardTitle","Table","Row","Col","Tables","Component","constructor","props","GetAll","get","then","response","setState","data","catch","error","console","log","finally","GetByName","state","searchinput","GetBySet","GetBySetCode","GetByMTGId","AddToShelf","id","onChange","e","qtyinput","target","value","rendertable","map","item","mtgid","name","set","setcode","mid","mname","mset","msetcode","mmtgid","componentDidMount","render","pageHeader","createRef","scrollContainerStyle","width","maxHeight","backgroundImage","require","event"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport axios from \"axios\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport \"assets/css/scrollbar.css\";\r\nimport MTGCard from\"classes/MTGCard.js\"\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Table,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\n\r\nclass Tables extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      MTGCard: [],\r\n      mid: MTGCard.id,\r\n      mname: MTGCard.name,\r\n      mset: MTGCard.set,\r\n      msetcode: MTGCard.setcode,\r\n      mmtgid: MTGCard.mtgid,\r\n      searchinput: '',\r\n      qtyinput: '0'\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Make a request for a user with a given ID\r\n    this.GetAll();\r\n  }\r\n\r\n  GetAll = () => {\r\n    axios.get('http://localhost:5000/api/MTGCard')\r\n      .then((response) => {\r\n        // handle success \r\n        this.setState({ MTGCard: response.data });\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .finally(function () {\r\n        // always executed\r\n      });\r\n  }\r\n\r\n  GetByName = () => {\r\n    axios.get(`http://localhost:5000/api/MTGCard/Name/${this.state.searchinput}`)\r\n      .then((response) => {\r\n        // handle success \r\n        this.setState({ MTGCard: response.data });\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .finally(function () {\r\n        // always executed\r\n      });\r\n  }\r\n\r\n  GetBySet = () => {\r\n    axios.get(`http://localhost:5000/api/MTGCard/Set/${this.state.searchinput}`)\r\n      .then((response) => {\r\n        // handle success \r\n        this.setState({ MTGCard: response.data });\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .finally(function () {\r\n        // always executed\r\n      });\r\n  }\r\n\r\n  GetBySetCode = () => {\r\n    axios.get(`http://localhost:5000/api/MTGCard/SetCode/${this.state.searchinput}`)\r\n      .then((response) => {\r\n        // handle success \r\n        this.setState({ MTGCard: response.data });\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .finally(function () {\r\n        // always executed\r\n      });\r\n  }\r\n\r\n  GetByMTGId = () => {\r\n    axios.get(`http://localhost:5000/api/MTGCard/MTGId/${this.state.searchinput}`)\r\n      .then((response) => {\r\n        // handle success \r\n        this.setState({ MTGCard: response.data });\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .finally(function () {\r\n        // always executed\r\n      });\r\n  }\r\n\r\n  AddToShelf = (id) => {\r\n    axios.get(`http://localhost:5000/api/MTGCard/MTGId/`)\r\n      .then((response) => {\r\n        // handle success \r\n        this.setState({ MTGCard: response.data });\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .finally(function () {\r\n        // always executed\r\n      });\r\n  }\r\n\r\n  onChange = (e) => {this.setState(\r\n    {\r\n       qtyinput: e.target.value\r\n    })\r\n    ;}\r\n\r\n  rendertable = () => {\r\n    return this.state.MTGCard.map((item) => {\r\n      return (\r\n        <tr key={item.id}>\r\n        <td>{item.mtgid}</td>\r\n        <td>{item.name}</td>\r\n        <td>{item.set}</td>\r\n        <td>{item.setcode}</td>\r\n        <td><input id={item.id} type=\"text\" value={this.state.qtyinput}\r\n            onChange={this.onChange}\r\n        /></td>\r\n        <td>\r\n          <Button\r\n          className=\"btn-round\"\r\n          color=\"info\"\r\n          outline\r\n          size=\"sm\"\r\n          onClick={this.AddToShelf(item.id)}\r\n          >\r\n          <i className=\"nc-icon nc-send\" /> Add to Shelf\r\n          </Button>\r\n        </td>             \r\n      </tr>)\r\n    })\r\n  };\r\n\r\n\r\n  render() {\r\n    let pageHeader = React.createRef();\r\n    const scrollContainerStyle = { width: \"1000px\", maxHeight: \"450px\" };\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          style=\r\n          {\r\n            {\r\n            backgroundImage: \"url(\" + require(\"assets/img/MTG/https___magic.wizards.com_sites_mtg_files_images_wallpaper_Ferocious_Pup_M20_1920x1080.jpg\") + \")\"\r\n            }\r\n          }\r\n          className=\"page-header\"\r\n          data-parallax={true}\r\n          ref={pageHeader}\r\n        >\r\n          <div className=\"filter\" />\r\n          <MDBContainer>\r\n            <div className=\"scrollbar scrollbar-default\" style={scrollContainerStyle}>\r\n              <Row md=\"12\">\r\n                <Col md=\"12\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle tag=\"h4\">Choose Your Weapons</CardTitle>\r\n                      <input placeholder=\"Search...\" type=\"text\" className=\"form-control\"\r\n                        value=\r\n                        {\r\n                          this.state.searchinput\r\n                        }\r\n                        onChange={\r\n                          (event) => (this.setState({ searchinput: event.target.value }))\r\n                        }\r\n                      />\r\n                      <Button\r\n                        className=\"btn-round\"\r\n                        color=\"success\"\r\n                        outline\r\n                        size=\"sm\"\r\n                        onClick={this.GetByName}\r\n                      >\r\n                        <i className=\"fa fa-search\" /> Find By Name\r\n                  </Button>\r\n                  <Button\r\n                        className=\"btn-round\"\r\n                        color=\"success\"\r\n                        outline\r\n                        size=\"sm\"\r\n                        onClick={this.GetBySet}\r\n                      >\r\n                        <i className=\"fa fa-search\" /> Find By Set\r\n                  </Button>\r\n                  <Button\r\n                        className=\"btn-round\"\r\n                        color=\"success\"\r\n                        outline\r\n                        size=\"sm\"\r\n                        onClick={this.GetBySetCode}\r\n                      >\r\n                        <i className=\"fa fa-search\" /> Find By Set Code\r\n                  </Button>\r\n                  <Button\r\n                        className=\"btn-round\"\r\n                        color=\"success\"\r\n                        outline\r\n                        size=\"sm\"\r\n                        onClick={this.GetByMTGId}\r\n                      >\r\n                        <i className=\"fa fa-search\" /> Find By MTG Card ID\r\n                  </Button>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <Table responsive>\r\n                        <thead className=\"text-primary\">\r\n                          <tr>\r\n                            <th>MTGCardID</th>\r\n                            <th>Card Name</th>\r\n                            <th>Set</th>\r\n                            <th>Set Code</th>\r\n                            <th>Quantity</th>\r\n                            <th>Shelf</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {this.rendertable()}\r\n                        </tbody>\r\n                      </Table>\r\n                        <Button\r\n                        href=\"/mtgshelf\"\r\n                        className=\"btn-round\"\r\n                        color=\"primary\"\r\n                        >\r\n                          Return To Previous Menu\r\n                        </Button>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </MDBContainer>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tables"]},"metadata":{},"sourceType":"module"}