{"ast":null,"code":"import _defineProperty from \"C:\\\\github\\\\repository\\\\MTG4UsFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\github\\\\repository\\\\MTG4UsFront\\\\src\\\\components\\\\MTGTables\\\\MTGCardsTable.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { MDBContainer } from \"mdbreact\";\nimport \"assets/css/scrollbar.css\";\nimport MTGCard from \"classes/MTGCard.js\";\nimport ReactDatetime from \"react-datetime\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, CardTitle, Table, Row, InputGroupAddon, InputGroupText, InputGroup, Col } from \"reactstrap\";\nimport { now } from \"moment\";\n\nclass Tables extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.GetAll = () => {\n      axios.get(\"http://localhost:5000/api/MTGCard\").then(response => {\n        this.setState({\n          MTGCard: response.data\n        });\n      });\n    };\n\n    this.GetByName = () => {\n      axios.get(\"http://localhost:5000/api/MTGCard/Name/\".concat(this.state.searchinput)).then(response => {\n        // handle success\n        this.setState({\n          MTGCard: response.data\n        });\n      });\n    };\n\n    this.GetBySet = () => {\n      axios.get(\"http://localhost:5000/api/MTGCard/Set/\".concat(this.state.searchinput)).then(response => {\n        // handle success\n        this.setState({\n          MTGCard: response.data\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {// always executed\n      });\n    };\n\n    this.GetBySetCode = () => {\n      axios.get(\"http://localhost:5000/api/MTGCard/SetCode/\".concat(this.state.searchinput)).then(response => {\n        // handle success\n        this.setState({\n          MTGCard: response.data\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {// always executed\n      });\n    };\n\n    this.GetByMTGId = () => {\n      axios.get(\"http://localhost:5000/api/MTGCard/MTGId/\".concat(this.state.searchinput)).then(response => {\n        // handle success\n        this.setState({\n          MTGCard: response.data\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {// always executed\n      });\n    };\n\n    this.MakeaWish = id => {\n      axios.get(\"http://localhost:5000/api/MTGCard/MTGId/\").then(response => {\n        // handle success\n        this.setState({\n          MTGCard: response.data\n        });\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).finally(function () {// always executed\n      });\n    };\n\n    this.onChange = (e, itemIndex) => {\n      // const newMTGCard = [ ...this.state.MTGCard ] //cria um copia nova na memoria\n      this.setState({\n        MTGCard: this.state.MTGCard.map((item, index) => {\n          if (itemIndex === index) {\n            return _objectSpread({}, item, {\n              qtyinput: e.target.value\n            });\n          }\n\n          return item;\n        })\n      });\n    };\n\n    this.onChangeDate = (e, itemIndex) => {\n      // const newMTGCard = [ ...this.state.MTGCard ] //cria um copia nova na memoria\n      this.setState({\n        MTGCard: this.state.MTGCard.map((item, index) => {\n          if (itemIndex === index) {\n            return _objectSpread({}, item, {\n              returndate: e.date\n            });\n          }\n\n          return item;\n        })\n      });\n    };\n\n    this.rendertable = () => {\n      return this.state.MTGCard.map((item, index) => {\n        return React.createElement(\"tr\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, item.mtgid), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, item.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, item.set), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, item.setcode), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: item.id,\n          type: \"text\",\n          value: item.qtyinput,\n          style: {\n            width: \"40px\"\n          },\n          onChange: event => this.onChange(event, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(ReactDatetime, {\n          value: item.returndate,\n          onChange: event => this.onChangeDate(event, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"btn-round\",\n          color: \"info\",\n          outline: true,\n          size: \"sm\",\n          onClick: this.MakeaWish(item.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"nc-icon nc-bag-16\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }), \" Wish It!\")));\n      });\n    };\n\n    this.state = {\n      MTGCard: [],\n      mid: MTGCard.id,\n      mname: MTGCard.name,\n      mset: MTGCard.set,\n      msetcode: MTGCard.setcode,\n      mmtgid: MTGCard.mtgid,\n      searchinput: \"\",\n      qtyinput: \"0\",\n      returndate: null\n    };\n  }\n\n  componentDidMount() {\n    // Make a request for a user with a given ID\n    this.GetAll();\n  }\n\n  render() {\n    let pageHeader = React.createRef();\n    const scrollContainerStyle = {\n      width: \"1000px\",\n      maxHeight: \"450px\"\n    };\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        backgroundImage: \"url(\" + require(\"assets/img/MTG/https___magic.wizards.com_sites_mtg_files_images_wallpaper_Growth-Spiral_RNA_1280x960_Wallpaper.jpg\") + \")\"\n      },\n      className: \"page-header\",\n      \"data-parallax\": true,\n      ref: pageHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"scrollbar scrollbar-default\",\n      style: scrollContainerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Row, {\n      md: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      tag: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Choose your Weapons\"), React.createElement(\"input\", {\n      placeholder: \"Search...\",\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.searchinput,\n      onChange: event => this.setState({\n        searchinput: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"btn-round\",\n      color: \"success\",\n      outline: true,\n      size: \"sm\",\n      onClick: this.GetByName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), \" Find By Name\"), React.createElement(Button, {\n      className: \"btn-round\",\n      color: \"success\",\n      outline: true,\n      size: \"sm\",\n      onClick: this.GetBySet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), \" Find By Set\"), React.createElement(Button, {\n      className: \"btn-round\",\n      color: \"success\",\n      outline: true,\n      size: \"sm\",\n      onClick: this.GetBySetCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), \" Find By Set Code\"), React.createElement(Button, {\n      className: \"btn-round\",\n      color: \"success\",\n      outline: true,\n      size: \"sm\",\n      onClick: this.GetByMTGId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), \" Find By MTG Card ID\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Table, {\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"MTGCardID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Card Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Set\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Set Code\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Return Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Wish\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, this.rendertable()))))))))));\n  }\n\n}\n\nexport default Tables;","map":{"version":3,"sources":["C:\\github\\repository\\MTG4UsFront\\src\\components\\MTGTables\\MTGCardsTable.js"],"names":["React","axios","MDBContainer","MTGCard","ReactDatetime","Button","Card","CardHeader","CardBody","CardTitle","Table","Row","InputGroupAddon","InputGroupText","InputGroup","Col","now","Tables","Component","constructor","props","GetAll","get","then","response","setState","data","GetByName","state","searchinput","GetBySet","catch","error","console","log","finally","GetBySetCode","GetByMTGId","MakeaWish","id","onChange","e","itemIndex","map","item","index","qtyinput","target","value","onChangeDate","returndate","date","rendertable","mtgid","name","set","setcode","width","event","mid","mname","mset","msetcode","mmtgid","componentDidMount","render","pageHeader","createRef","scrollContainerStyle","maxHeight","backgroundImage","require"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport \"assets/css/scrollbar.css\";\r\nimport MTGCard from \"classes/MTGCard.js\";\r\nimport ReactDatetime from \"react-datetime\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Table,\r\n  Row,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { now } from \"moment\";\r\n\r\nclass Tables extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      MTGCard: [],\r\n      mid: MTGCard.id,\r\n      mname: MTGCard.name,\r\n      mset: MTGCard.set,\r\n      msetcode: MTGCard.setcode,\r\n      mmtgid: MTGCard.mtgid,\r\n      searchinput: \"\",\r\n      qtyinput: \"0\",\r\n      returndate: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Make a request for a user with a given ID\r\n    this.GetAll();\r\n  }\r\n\r\n  GetAll = () => {\r\n     axios\r\n       .get(\"http://localhost:5000/api/MTGCard\")\r\n       .then(response => {\r\n          this.setState({ MTGCard: response.data });\r\n        })\r\n  };\r\n\r\n  GetByName = () => {\r\n    axios\r\n      .get(`http://localhost:5000/api/MTGCard/Name/${this.state.searchinput}`)\r\n      .then(response => {\r\n        // handle success\r\n        this.setState({ MTGCard: response.data });\r\n      })\r\n  };\r\n\r\n  GetBySet = () => {\r\n    axios\r\n      .get(`http://localhost:5000/api/MTGCard/Set/${this.state.searchinput}`)\r\n      .then(response => {\r\n        // handle success\r\n        this.setState({ MTGCard: response.data });\r\n      })\r\n      .catch(function(error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .finally(function() {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  GetBySetCode = () => {\r\n    axios\r\n      .get(\r\n        `http://localhost:5000/api/MTGCard/SetCode/${this.state.searchinput}`\r\n      )\r\n      .then(response => {\r\n        // handle success\r\n        this.setState({ MTGCard: response.data });\r\n      })\r\n      .catch(function(error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .finally(function() {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  GetByMTGId = () => {\r\n    axios\r\n      .get(`http://localhost:5000/api/MTGCard/MTGId/${this.state.searchinput}`)\r\n      .then(response => {\r\n        // handle success\r\n        this.setState({ MTGCard: response.data });\r\n      })\r\n      .catch(function(error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .finally(function() {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  MakeaWish = id => {\r\n    axios\r\n      .get(`http://localhost:5000/api/MTGCard/MTGId/`)\r\n      .then(response => {\r\n        // handle success\r\n        this.setState({ MTGCard: response.data });\r\n      })\r\n      .catch(function(error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .finally(function() {\r\n        // always executed\r\n      });\r\n  };\r\n\r\n  onChange = (e, itemIndex) => {\r\n    // const newMTGCard = [ ...this.state.MTGCard ] //cria um copia nova na memoria\r\n\r\n    this.setState({\r\n      MTGCard: this.state.MTGCard.map((item, index) => {\r\n        if (itemIndex === index) {\r\n          return {\r\n            ...item,\r\n            qtyinput: e.target.value\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    });\r\n  };\r\n\r\n  onChangeDate = (e, itemIndex) => {\r\n    // const newMTGCard = [ ...this.state.MTGCard ] //cria um copia nova na memoria\r\n\r\n    this.setState({\r\n      MTGCard: this.state.MTGCard.map((item, index) => {\r\n        if (itemIndex === index) {\r\n          return {\r\n            ...item,\r\n            returndate: e.date\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    });\r\n  };\r\n\r\n  rendertable = () => {\r\n    return this.state.MTGCard.map((item, index) => {\r\n      return (\r\n        <tr key={item.id}>\r\n          <td>{item.mtgid}</td>\r\n          <td>{item.name}</td>\r\n          <td>{item.set}</td>\r\n          <td>{item.setcode}</td>\r\n          <td>\r\n            <input\r\n              id={item.id}\r\n              type=\"text\"\r\n              value={item.qtyinput}\r\n              style={{width : \"40px\"}}\r\n              onChange={event => this.onChange(event, index)}\r\n            />\r\n          </td>\r\n          <td>\r\n            <ReactDatetime\r\n              value={item.returndate}\r\n              onChange={event => this.onChangeDate(event, index)}\r\n            />\r\n          </td>\r\n          <td>\r\n            <Button\r\n              className=\"btn-round\"\r\n              color=\"info\"\r\n              outline\r\n              size=\"sm\"\r\n              onClick={this.MakeaWish(item.id)}\r\n            >\r\n              <i className=\"nc-icon nc-bag-16\" /> Wish It!\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let pageHeader = React.createRef();\r\n    const scrollContainerStyle = { width: \"1000px\", maxHeight: \"450px\" };\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            backgroundImage:\r\n              \"url(\" +\r\n              require(\"assets/img/MTG/https___magic.wizards.com_sites_mtg_files_images_wallpaper_Growth-Spiral_RNA_1280x960_Wallpaper.jpg\") +\r\n              \")\"\r\n          }}\r\n          className=\"page-header\"\r\n          data-parallax={true}\r\n          ref={pageHeader}\r\n        >\r\n          <div className=\"filter\" />\r\n          <MDBContainer>\r\n            <div\r\n              className=\"scrollbar scrollbar-default\"\r\n              style={scrollContainerStyle}\r\n            >\r\n              <Row md=\"12\">\r\n                <Col md=\"12\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle tag=\"h4\">Choose your Weapons</CardTitle>\r\n                      <input\r\n                        placeholder=\"Search...\"\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={this.state.searchinput}\r\n                        onChange={event =>\r\n                          this.setState({ searchinput: event.target.value })\r\n                        }\r\n                      />\r\n                      <Button\r\n                        className=\"btn-round\"\r\n                        color=\"success\"\r\n                        outline\r\n                        size=\"sm\"\r\n                        onClick={this.GetByName}\r\n                      >\r\n                        <i className=\"fa fa-search\" /> Find By Name\r\n                      </Button>\r\n                      <Button\r\n                        className=\"btn-round\"\r\n                        color=\"success\"\r\n                        outline\r\n                        size=\"sm\"\r\n                        onClick={this.GetBySet}\r\n                      >\r\n                        <i className=\"fa fa-search\" /> Find By Set\r\n                      </Button>\r\n                      <Button\r\n                        className=\"btn-round\"\r\n                        color=\"success\"\r\n                        outline\r\n                        size=\"sm\"\r\n                        onClick={this.GetBySetCode}\r\n                      >\r\n                        <i className=\"fa fa-search\" /> Find By Set Code\r\n                      </Button>\r\n                      <Button\r\n                        className=\"btn-round\"\r\n                        color=\"success\"\r\n                        outline\r\n                        size=\"sm\"\r\n                        onClick={this.GetByMTGId}\r\n                      >\r\n                        <i className=\"fa fa-search\" /> Find By MTG Card ID\r\n                      </Button>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <Table responsive>\r\n                        <thead className=\"text-primary\">\r\n                          <tr>\r\n                            <th>MTGCardID</th>\r\n                            <th>Card Name</th>\r\n                            <th>Set</th>\r\n                            <th>Set Code</th>\r\n                            <th>Quantity</th>\r\n                            <th>Return Date</th>\r\n                            <th>Wish</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>{this.rendertable()}</tbody>\r\n                      </Table>\r\n                    </CardBody>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </MDBContainer>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}